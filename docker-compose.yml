services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: fb_automation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5433:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    build: .
    command: gunicorn fb_automation.wsgi:application --config gunicorn.conf.py
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
      - /home/ec2-user/fb_automation/application_default_credentials.json:/app/application_default_credentials.json:ro
    ports:
      - "80:8000"
      - "443:8000"
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/fb_automation
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend

  celery-worker:
    build: .
    command: celery -A fb_automation worker --loglevel=info
    volumes:
      - .:/app
      - media_volume:/app/media
      - /home/ec2-user/fb_automation/application_default_credentials.json:/app/application_default_credentials.json:ro
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/fb_automation
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - GOOGLE_APPLICATION_CREDENTIALS=/app/application_default_credentials.json
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend

  celery-beat:
    build: .
    command: celery -A fb_automation beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/fb_automation
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend

  flower:
    build: .
    command: celery -A fb_automation flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:postgres123@db:5432/fb_automation
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - celery-worker
    restart: unless-stopped
    networks:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend:
