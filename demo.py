#!/usr/bin/env python
"""
Script de demonstra√ß√£o do Facebook Automation
Este script cria dados de exemplo e demonstra as funcionalidades principais
"""

import os
import sys
import django
from datetime import datetime, timedelta

# Configurar Django
sys.path.append('/home/murilo/Personal/fb_automation')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'fb_automation.settings')
django.setup()

from django.contrib.auth.models import User
from facebook_integration.models import (
    FacebookPage, PostTemplate, ScheduledPost, 
    AIConfiguration, PublishedPost
)
from django.utils import timezone


def create_demo_data():
    """Cria dados de demonstra√ß√£o"""
    print("üöÄ Criando dados de demonstra√ß√£o...")
    
    # 1. Buscar ou criar usu√°rio admin
    try:
        user = User.objects.get(username='murilo')
        print(f"‚úÖ Usu√°rio encontrado: {user.username}")
    except User.DoesNotExist:
        user = User.objects.create_user(
            username='demo_user',
            email='demo@example.com',
            password='demo123'
        )
        print(f"‚úÖ Usu√°rio criado: {user.username}")
    
    # 2. Criar configura√ß√£o de IA padr√£o
    ai_config, created = AIConfiguration.objects.get_or_create(
        name="Configura√ß√£o Demo",
        defaults={
            'model': 'gpt-3.5-turbo',
            'max_tokens': 500,
            'temperature': 0.7,
            'include_hashtags': True,
            'max_hashtags': 5,
            'include_emojis': True,
            'is_default': True,
        }
    )
    print(f"‚úÖ Configura√ß√£o IA: {'criada' if created else 'j√° existe'}")
    
    # 3. Criar p√°gina demo do Facebook
    fb_page, created = FacebookPage.objects.get_or_create(
        page_id="123456789_DEMO",
        defaults={
            'name': "P√°gina Demo - Tecnologia",
            'access_token': "demo_token_aqui",
            'is_active': True,
        }
    )
    print(f"‚úÖ P√°gina Facebook: {'criada' if created else 'j√° existe'}")
    
    # 4. Criar templates de exemplo
    templates_data = [
        {
            'name': "Post Motivacional Tech",
            'prompt': "Crie um post motivacional sobre tecnologia e inova√ß√£o. Use linguagem inspiradora e inclua call-to-action para engajamento.",
            'category': "motivacional"
        },
        {
            'name': "Dica de Programa√ß√£o",
            'prompt': "Compartilhe uma dica √∫til de programa√ß√£o ou desenvolvimento. Seja did√°tico e inclua exemplo pr√°tico.",
            'category': "educativo"
        },
        {
            'name': "Novidade em IA",
            'prompt': "Fale sobre uma novidade ou tend√™ncia em Intelig√™ncia Artificial. Use linguagem acess√≠vel para explicar conceitos t√©cnicos.",
            'category': "tecnologia"
        },
        {
            'name': "Reflex√£o sobre Futuro",
            'prompt': "Crie uma reflex√£o sobre o futuro da tecnologia e seu impacto na sociedade. Seja reflexivo e estimule discuss√£o.",
            'category': "reflexao"
        }
    ]
    
    for template_data in templates_data:
        template, created = PostTemplate.objects.get_or_create(
            name=template_data['name'],
            defaults={
                'prompt': template_data['prompt'],
                'category': template_data['category'],
                'created_by': user,
                'is_active': True,
            }
        )
        print(f"‚úÖ Template '{template.name}': {'criado' if created else 'j√° existe'}")
    
    # 5. Criar alguns posts agendados de exemplo
    templates = PostTemplate.objects.all()
    
    for i, template in enumerate(templates[:3]):
        scheduled_time = timezone.now() + timedelta(hours=i+1, minutes=30)
        
        scheduled_post, created = ScheduledPost.objects.get_or_create(
            facebook_page=fb_page,
            template=template,
            scheduled_time=scheduled_time,
            defaults={
                'status': 'pending',
                'created_by': user,
            }
        )
        print(f"‚úÖ Post agendado '{template.name}': {'criado' if created else 'j√° existe'}")
    
    # 6. Criar alguns posts "publicados" de exemplo (simulados)
    for i, template in enumerate(templates[:2]):
        published_time = timezone.now() - timedelta(days=i+1)
        
        published_post, created = PublishedPost.objects.get_or_create(
            facebook_page=fb_page,
            facebook_post_id=f"fake_post_id_{i+1}",
            defaults={
                'content': f"Este √© um post de exemplo gerado pelo template '{template.name}'. üöÄ #tecnologia #inovacao",
                'facebook_post_url': f"https://facebook.com/fake_post_id_{i+1}",
                'likes_count': 15 + (i * 10),
                'comments_count': 3 + i,
                'shares_count': 2 + i,
                'reach': 150 + (i * 50),
                'published_at': published_time,
            }
        )
        print(f"‚úÖ Post publicado simulado: {'criado' if created else 'j√° existe'}")
    
    print("\nüéâ Dados de demonstra√ß√£o criados com sucesso!")
    return True


def show_demo_info():
    """Mostra informa√ß√µes sobre a demonstra√ß√£o"""
    print("\n" + "="*60)
    print("üìä DEMONSTRA√á√ÉO DO FACEBOOK AUTOMATION")
    print("="*60)
    
    print(f"\nüìà ESTAT√çSTICAS:")
    print(f"   ‚Ä¢ P√°ginas Facebook: {FacebookPage.objects.count()}")
    print(f"   ‚Ä¢ Templates criados: {PostTemplate.objects.count()}")
    print(f"   ‚Ä¢ Posts agendados: {ScheduledPost.objects.count()}")
    print(f"   ‚Ä¢ Posts publicados: {PublishedPost.objects.count()}")
    print(f"   ‚Ä¢ Configura√ß√µes IA: {AIConfiguration.objects.count()}")
    
    print(f"\nüåê ACESSO:")
    print(f"   ‚Ä¢ Dashboard: http://localhost:8000/")
    print(f"   ‚Ä¢ Admin: http://localhost:8000/admin/")
    print(f"   ‚Ä¢ Usu√°rio: murilo")
    
    print(f"\nüîß TESTES DISPON√çVEIS:")
    print(f"   ‚Ä¢ Testar IA: Clique no bot√£o 'Testar IA' no dashboard")
    print(f"   ‚Ä¢ Gerar pr√©via: Crie um novo post agendado")
    print(f"   ‚Ä¢ Ver templates: Acesse a se√ß√£o Templates")
    print(f"   ‚Ä¢ Hist√≥rico: Veja posts publicados")
    
    print(f"\n‚ö†Ô∏è  PARA USAR COM APIS REAIS:")
    print(f"   1. Configure as chaves no arquivo .env")
    print(f"   2. Leia o guia: CONFIGURACAO_APIS.md")
    print(f"   3. Certifique-se que RabbitMQ est√° rodando")
    print(f"   4. Teste as conex√µes no dashboard")
    
    print(f"\nüöÄ PR√ìXIMOS PASSOS:")
    print(f"   1. Acesse http://localhost:8000/")
    print(f"   2. Explore o dashboard")
    print(f"   3. Configure suas APIs reais")
    print(f"   4. Comece a automatizar!")
    
    print("\n" + "="*60)


def main():
    """Fun√ß√£o principal"""
    print("ü§ñ Facebook Automation - Script de Demonstra√ß√£o")
    print("-" * 50)
    
    try:
        # Criar dados de exemplo
        create_demo_data()
        
        # Mostrar informa√ß√µes
        show_demo_info()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro durante a demonstra√ß√£o: {e}")
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)